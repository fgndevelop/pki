# Sample request configuration file

# see https://www.openssl.org/docs/manmaster/apps/config.html
# for an overview of the openssl config format

# The next part of the configuration file is used by the openssl req command.
# It defines the CA's key pair, its DN, and the desired extensions for the CA
# certificate.

[ req ]
RANDFILE               	= ~/.rnd		# Use RANDFILE
default_bits            = 4096                  # RSA key size
default_keyfile		= private.key		# Default private key file
encrypt_key             = yes                   # Encrypt private key
default_md              = sha256                # see https://www.entrust.com/lp/sha-1-sha-2-faq/ 
utf8                    = yes                   # Input is UTF-8
string_mask             = utf8only              # Emit UTF-8 strings
prompt                  = no                    # Don't prompt for DN
distinguished_name      = rootca_dn             # DN section
req_extensions          = reqext                # Desired extensions

# Distinguished name
[ rootca_dn ]
0.domainComponent       = "org"
1.domainComponent       = "sample"
organizationName        = "Simple Inc"
organizationalUnitName  = "Sample Root CA"
commonName              = "Sample Root CA"

# X509v3 extensions for the root CA
[ reqext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:2
subjectKeyIdentifier    = hash

# Certificate extensions define what types of certificates the CA is able to
# create.

[ root_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true
subjectKeyIdentifier    = hash

[ signing_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

# CRL extensions exist solely to point to the CA certificate that has issued
# the CRL.

[ crl_ext ]
authorityKeyIdentifier  = keyid:always
prompt                 	= no
