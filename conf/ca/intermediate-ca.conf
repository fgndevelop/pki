# Intermediate CA
# The configuration is customized to meet the needs of a CA-signing CA.

# The [default] section contains global constants that can be referred to from
# the entire configuration file. It may also hold settings pertaining to more
# than one openssl command.

[ default ]
ca_dir                  = @CA_DIR@              	# CA toplevel directory
ca_name                 = @CA_NAME@             	# CA name
default_ca              = $ca_name			# The default CA section
ca_key			= $ca_dir/private/$ca_name.key  # CA private key
RANDFILE                = $ca_dir/mgmt/rnd        	# Use RANDFILE
base_url		= http://pki.@CA_NAME@.com	# Sample Base URL
aia_url			= $base_url/$ca_name.crt	# Authority Information Access URL
crl_url			= $base_url/$ca_name.crl	# Certificate Revocation List URL

# The [req] section of the configuration file is used by the openssl req command.
# It defines the CA's key pair, its DN, and the desired extensions for the CA
# certificate.

[ req ]
default_bits            = 4096                 	# RSA key size, see the "pki req" command 
						# for different key types and sizes
default_keyfile         = $ca_key  		# Default private key file
encrypt_key             = yes			# Protect private key
default_md              = sha256		# MD to use
utf8                    = yes			# Input is UTF-8
string_mask             = utf8only		# Emit UTF-8 strings
prompt                  = no			# Don't prompt for DN
distinguished_name      = dn			# DN section
req_extensions          = reqext            	# Extensions section

[ dn ]
countryName             = "@CA_NAME@ Country Name" 
organizationName        = "@CA_NAME@ Organization"
organizationalUnitName  = "Intermediate CA"
commonName              = "Intermediate CA"

# The default root ca does NOT copy extensions
# We do however define extensions for the certificate request
# so that when the "copy_extensions" policy is changed or the
# request gets signed by a different ca, we already have extensions
# included
#
# Since this is an intermediate (ca-signing ca), we request a pathlen of 1

[ reqext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:1
subjectKeyIdentifier    = hash
authorityInfoAccess 	= OCSP;URI:http://ocsp.my.host/
authorityInfoAccess     = caIssuers;URI:http://my.ca/ca.html

# The remainder of this configuration file is used by the openssl ca command.
# The [ca] section defines the locations of CA assets, as well as the policies
# applying to the CA.

[ ca ]
certificate             = $ca_dir/${ca_name}.crt       	# The CA cert
private_key             = $ca_key 			# CA private key
new_certs_dir           = $ca_dir/certs          	# Certificate archive
serial                  = $ca_dir/mgmt/serial.crt 	# Serial number file
crlnumber               = $ca_dir/mgmt/serial.crl 	# CRL number file
database                = $ca_dir/mgmt/database 	# Index file
unique_subject          = no				# Require unique subject
default_days            = 730				# How long to certify for
default_md              = sha256			# MD to use
policy                  = match_pol			# Default naming policy
email_in_dn             = no				# Add email to cert DN
preserve                = no				# Keep passed DN ordering
name_opt                = ca_default			# Subject DN display options
cert_opt                = ca_default			# Certificate display options
copy_extensions         = copy				# Copy extensions from CSR
x509_extensions         = ca_ext			# Default cert extensions
default_crl_days        = 7				# How long before next CRL
crl_extensions          = crl_ext			# CRL extensions

# Naming policies control which parts of a DN in a certificate signing request
# end up in the certificate and under what circumstances certification should be denied.

[ match_pol ]
domainComponent         = optional			# Included if present
organizationName        = match             		# Has to match this CA
organizationalUnitName  = optional             		# Included if present
commonName              = supplied              	# Must be present
countryName             = optional

[ any_pol ]
domainComponent         = optional
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = optional
emailAddress            = optional

# Certificate extensions define what types of certificates the CA is able to
# create.
#
# Also we use the "copy_extensions" setting to set defaults for certificates
# signed by this ca for the following fields:
#
#subjectKeyIdentifier    = hash
#authorityKeyIdentifier  = keyid:always
#authorityInfoAccess 	 = OCSP;URI:http://ocsp.my.host/
#authorityInfoAccess     = caIssuers;URI:http://my.ca/ca.html
#
# Since this is an intermediate (ca-signing ca), we sign requests with a pathlen of 0

[ ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @issuer_info
crlDistributionPoints	= @crl_info

# CRL extensions exist solely to point to the CA certificate that has issued
# the CRL.

[ crl_ext ]
authorityKeyIdentifier  = keyid:always

# Authority Information Access (Issuing CA) URL
[ issuer_info ]
caIssuers;URI.0		= $aia_url

# Where to get the certificate revocation list
[ crl_info ]
URI.0			= $crl_url
